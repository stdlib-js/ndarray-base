{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: function-object, napi, unary\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name assert\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/ndarray/base/assert}\n*/\nimport assert from '@stdlib/ndarray-base-assert';\nsetReadOnly( ns, 'assert', assert );\n\n/**\n* @name assign\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assign}\n*/\nimport assign from '@stdlib/ndarray-base-assign';\nsetReadOnly( ns, 'assign', assign );\n\n/**\n* @name binaryLoopOrder\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/binary-loop-interchange-order}\n*/\nimport binaryLoopOrder from '@stdlib/ndarray-base-binary-loop-interchange-order';\nsetReadOnly( ns, 'binaryLoopOrder', binaryLoopOrder );\n\n/**\n* @name binaryBlockSize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/binary-tiling-block-size}\n*/\nimport binaryBlockSize from '@stdlib/ndarray-base-binary-tiling-block-size';\nsetReadOnly( ns, 'binaryBlockSize', binaryBlockSize );\n\n/**\n* @name bind2vind\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/bind2vind}\n*/\nimport bind2vind from '@stdlib/ndarray-base-bind2vind';\nsetReadOnly( ns, 'bind2vind', bind2vind );\n\n/**\n* @name broadcastArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/broadcast-array}\n*/\nimport broadcastArray from '@stdlib/ndarray-base-broadcast-array';\nsetReadOnly( ns, 'broadcastArray', broadcastArray );\n\n/**\n* @name broadcastArrays\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/broadcast-arrays}\n*/\nimport broadcastArrays from '@stdlib/ndarray-base-broadcast-arrays';\nsetReadOnly( ns, 'broadcastArrays', broadcastArrays );\n\n/**\n* @name broadcastScalar\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/broadcast-scalar}\n*/\nimport broadcastScalar from '@stdlib/ndarray-base-broadcast-scalar';\nsetReadOnly( ns, 'broadcastScalar', broadcastScalar );\n\n/**\n* @name broadcastShapes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/broadcast-shapes}\n*/\nimport broadcastShapes from '@stdlib/ndarray-base-broadcast-shapes';\nsetReadOnly( ns, 'broadcastShapes', broadcastShapes );\n\n/**\n* @name buffer\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/buffer}\n*/\nimport buffer from '@stdlib/ndarray-base-buffer';\nsetReadOnly( ns, 'buffer', buffer );\n\n/**\n* @name bufferCtors\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/buffer-ctors}\n*/\nimport bufferCtors from '@stdlib/ndarray-base-buffer-ctors';\nsetReadOnly( ns, 'bufferCtors', bufferCtors );\n\n/**\n* @name bufferDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/buffer-dtype}\n*/\nimport bufferDataType from '@stdlib/ndarray-base-buffer-dtype';\nsetReadOnly( ns, 'bufferDataType', bufferDataType );\n\n/**\n* @name bufferDataTypeEnum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/buffer-dtype-enum}\n*/\nimport bufferDataTypeEnum from '@stdlib/ndarray-base-buffer-dtype-enum';\nsetReadOnly( ns, 'bufferDataTypeEnum', bufferDataTypeEnum );\n\n/**\n* @name bytesPerElement\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/bytes-per-element}\n*/\nimport bytesPerElement from '@stdlib/ndarray-base-bytes-per-element';\nsetReadOnly( ns, 'bytesPerElement', bytesPerElement );\n\n/**\n* @name char2dtype\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/char2dtype}\n*/\nimport char2dtype from '@stdlib/ndarray-base-char2dtype';\nsetReadOnly( ns, 'char2dtype', char2dtype );\n\n/**\n* @name clampIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/clamp-index}\n*/\nimport clampIndex from '@stdlib/ndarray-base-clamp-index';\nsetReadOnly( ns, 'clampIndex', clampIndex );\n\n/**\n* @name ndarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/ctor}\n*/\nimport ndarray from '@stdlib/ndarray-base-ctor';\nsetReadOnly( ns, 'ndarray', ndarray );\n\n/**\n* @name data\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/data-buffer}\n*/\nimport data from '@stdlib/ndarray-base-data-buffer';\nsetReadOnly( ns, 'data', data );\n\n/**\n* @name dtype\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype}\n*/\nimport dtype from '@stdlib/ndarray-base-dtype';\nsetReadOnly( ns, 'dtype', dtype );\n\n/**\n* @name dtypeChar\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype-char}\n*/\nimport dtypeChar from '@stdlib/ndarray-base-dtype-char';\nsetReadOnly( ns, 'dtypeChar', dtypeChar );\n\n/**\n* @name dtypeDesc\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype-desc}\n*/\nimport dtypeDesc from '@stdlib/ndarray-base-dtype-desc';\nsetReadOnly( ns, 'dtypeDesc', dtypeDesc );\n\n/**\n* @name dtypeEnum2Str\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype-enum2str}\n*/\nimport dtypeEnum2Str from '@stdlib/ndarray-base-dtype-enum2str';\nsetReadOnly( ns, 'dtypeEnum2Str', dtypeEnum2Str );\n\n/**\n* @name dtypeResolveEnum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype-resolve-enum}\n*/\nimport dtypeResolveEnum from '@stdlib/ndarray-base-dtype-resolve-enum';\nsetReadOnly( ns, 'dtypeResolveEnum', dtypeResolveEnum );\n\n/**\n* @name dtypeResolveStr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype-resolve-str}\n*/\nimport dtypeResolveStr from '@stdlib/ndarray-base-dtype-resolve-str';\nsetReadOnly( ns, 'dtypeResolveStr', dtypeResolveStr );\n\n/**\n* @name dtypeStr2Enum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype-str2enum}\n*/\nimport dtypeStr2Enum from '@stdlib/ndarray-base-dtype-str2enum';\nsetReadOnly( ns, 'dtypeStr2Enum', dtypeStr2Enum );\n\n/**\n* @name dtype2c\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtype2c}\n*/\nimport dtype2c from '@stdlib/ndarray-base-dtype2c';\nsetReadOnly( ns, 'dtype2c', dtype2c );\n\n/**\n* @name dtypes2signatures\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/dtypes2signatures}\n*/\nimport dtypes2signatures from '@stdlib/ndarray-base-dtypes2signatures';\nsetReadOnly( ns, 'dtypes2signatures', dtypes2signatures );\n\n/**\n* @name empty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/empty}\n*/\nimport empty from '@stdlib/ndarray-base-empty';\nsetReadOnly( ns, 'empty', empty );\n\n/**\n* @name emptyLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/empty-like}\n*/\nimport emptyLike from '@stdlib/ndarray-base-empty-like';\nsetReadOnly( ns, 'emptyLike', emptyLike );\n\n/**\n* @name every\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/every}\n*/\nimport every from '@stdlib/ndarray-base-every';\nsetReadOnly( ns, 'every', every );\n\n/**\n* @name expandDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/expand-dimensions}\n*/\nimport expandDimensions from '@stdlib/ndarray-base-expand-dimensions';\nsetReadOnly( ns, 'expandDimensions', expandDimensions );\n\n/**\n* @name fill\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/fill}\n*/\nimport fill from '@stdlib/ndarray-base-fill';\nsetReadOnly( ns, 'fill', fill );\n\n/**\n* @name fillBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/fill-by}\n*/\nimport fillBy from '@stdlib/ndarray-base-fill-by';\nsetReadOnly( ns, 'fillBy', fillBy );\n\n/**\n* @name flag\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/flag}\n*/\nimport flag from '@stdlib/ndarray-base-flag';\nsetReadOnly( ns, 'flag', flag );\n\n/**\n* @name flags\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/flags}\n*/\nimport flags from '@stdlib/ndarray-base-flags';\nsetReadOnly( ns, 'flags', flags );\n\n/**\n* @name fliplr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/fliplr}\n*/\nimport fliplr from '@stdlib/ndarray-base-fliplr';\nsetReadOnly( ns, 'fliplr', fliplr );\n\n/**\n* @name flipud\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/flipud}\n*/\nimport flipud from '@stdlib/ndarray-base-flipud';\nsetReadOnly( ns, 'flipud', flipud );\n\n/**\n* @name forEach\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/for-each}\n*/\nimport forEach from '@stdlib/ndarray-base-for-each';\nsetReadOnly( ns, 'forEach', forEach );\n\n/**\n* @name scalar2ndarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/from-scalar}\n*/\nimport scalar2ndarray from '@stdlib/ndarray-base-from-scalar';\nsetReadOnly( ns, 'scalar2ndarray', scalar2ndarray );\n\n/**\n* @name scalar2ndarrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/from-scalar-like}\n*/\nimport scalar2ndarrayLike from '@stdlib/ndarray-base-from-scalar-like';\nsetReadOnly( ns, 'scalar2ndarrayLike', scalar2ndarrayLike );\n\n/**\n* @name includes\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/includes}\n*/\nimport includes from '@stdlib/ndarray-base-includes';\nsetReadOnly( ns, 'includes', includes );\n\n/**\n* @name ind\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/ind}\n*/\nimport ind from '@stdlib/ndarray-base-ind';\nsetReadOnly( ns, 'ind', ind );\n\n/**\n* @name ind2sub\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/ind2sub}\n*/\nimport ind2sub from '@stdlib/ndarray-base-ind2sub';\nsetReadOnly( ns, 'ind2sub', ind2sub );\n\n/**\n* @name iterationOrder\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/iteration-order}\n*/\nimport iterationOrder from '@stdlib/ndarray-base-iteration-order';\nsetReadOnly( ns, 'iterationOrder', iterationOrder );\n\n/**\n* @name map\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/map}\n*/\nimport map from '@stdlib/ndarray-base-map';\nsetReadOnly( ns, 'map', map );\n\n/**\n* @name maxViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/max-view-buffer-index}\n*/\nimport maxViewBufferIndex from '@stdlib/ndarray-base-max-view-buffer-index';\nsetReadOnly( ns, 'maxViewBufferIndex', maxViewBufferIndex );\n\n/**\n* @name maybeBroadcastArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/maybe-broadcast-array}\n*/\nimport maybeBroadcastArray from '@stdlib/ndarray-base-maybe-broadcast-array';\nsetReadOnly( ns, 'maybeBroadcastArray', maybeBroadcastArray );\n\n/**\n* @name maybeBroadcastArrays\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/maybe-broadcast-arrays}\n*/\nimport maybeBroadcastArrays from '@stdlib/ndarray-base-maybe-broadcast-arrays';\nsetReadOnly( ns, 'maybeBroadcastArrays', maybeBroadcastArrays );\n\n/**\n* @name metaDataProps\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/meta-data-props}\n*/\nimport metaDataProps from '@stdlib/ndarray-base-meta-data-props';\nsetReadOnly( ns, 'metaDataProps', metaDataProps );\n\n/**\n* @name minSignedIntegerDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/min-signed-integer-dtype}\n*/\nimport minSignedIntegerDataType from '@stdlib/ndarray-base-min-signed-integer-dtype';\nsetReadOnly( ns, 'minSignedIntegerDataType', minSignedIntegerDataType );\n\n/**\n* @name minUnsignedIntegerDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/min-unsigned-integer-dtype}\n*/\nimport minUnsignedIntegerDataType from '@stdlib/ndarray-base-min-unsigned-integer-dtype';\nsetReadOnly( ns, 'minUnsignedIntegerDataType', minUnsignedIntegerDataType );\n\n/**\n* @name minViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/min-view-buffer-index}\n*/\nimport minViewBufferIndex from '@stdlib/ndarray-base-min-view-buffer-index';\nsetReadOnly( ns, 'minViewBufferIndex', minViewBufferIndex );\n\n/**\n* @name minmaxViewBufferIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/minmax-view-buffer-index}\n*/\nimport minmaxViewBufferIndex from '@stdlib/ndarray-base-minmax-view-buffer-index';\nsetReadOnly( ns, 'minmaxViewBufferIndex', minmaxViewBufferIndex );\n\n/**\n* @name ndarraylike2ndarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/ndarraylike2ndarray}\n*/\nimport ndarraylike2ndarray from '@stdlib/ndarray-base-ndarraylike2ndarray';\nsetReadOnly( ns, 'ndarraylike2ndarray', ndarraylike2ndarray );\n\n/**\n* @name ndarraylike2object\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/ndarraylike2object}\n*/\nimport ndarraylike2object from '@stdlib/ndarray-base-ndarraylike2object';\nsetReadOnly( ns, 'ndarraylike2object', ndarraylike2object );\n\n/**\n* @name ndims\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/ndims}\n*/\nimport ndims from '@stdlib/ndarray-base-ndims';\nsetReadOnly( ns, 'ndims', ndims );\n\n/**\n* @name nextCartesianIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/next-cartesian-index}\n*/\nimport nextCartesianIndex from '@stdlib/ndarray-base-next-cartesian-index';\nsetReadOnly( ns, 'nextCartesianIndex', nextCartesianIndex );\n\n/**\n* @name nonsingletonDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/nonsingleton-dimensions}\n*/\nimport nonsingletonDimensions from '@stdlib/ndarray-base-nonsingleton-dimensions';\nsetReadOnly( ns, 'nonsingletonDimensions', nonsingletonDimensions );\n\n/**\n* @name normalizeIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/normalize-index}\n*/\nimport normalizeIndex from '@stdlib/ndarray-base-normalize-index';\nsetReadOnly( ns, 'normalizeIndex', normalizeIndex );\n\n/**\n* @name normalizeIndices\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/normalize-indices}\n*/\nimport normalizeIndices from '@stdlib/ndarray-base-normalize-indices';\nsetReadOnly( ns, 'normalizeIndices', normalizeIndices );\n\n/**\n* @name nullary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/nullary}\n*/\nimport nullary from '@stdlib/ndarray-base-nullary';\nsetReadOnly( ns, 'nullary', nullary );\n\n/**\n* @name nullaryLoopOrder\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/nullary-loop-interchange-order}\n*/\nimport nullaryLoopOrder from '@stdlib/ndarray-base-nullary-loop-interchange-order';\nsetReadOnly( ns, 'nullaryLoopOrder', nullaryLoopOrder );\n\n/**\n* @name nullaryBlockSize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/nullary-tiling-block-size}\n*/\nimport nullaryBlockSize from '@stdlib/ndarray-base-nullary-tiling-block-size';\nsetReadOnly( ns, 'nullaryBlockSize', nullaryBlockSize );\n\n/**\n* @name numel\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/numel}\n*/\nimport numel from '@stdlib/ndarray-base-numel';\nsetReadOnly( ns, 'numel', numel );\n\n/**\n* @name numelDimension\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/numel-dimension}\n*/\nimport numelDimension from '@stdlib/ndarray-base-numel-dimension';\nsetReadOnly( ns, 'numelDimension', numelDimension );\n\n/**\n* @name offset\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/offset}\n*/\nimport offset from '@stdlib/ndarray-base-offset';\nsetReadOnly( ns, 'offset', offset );\n\n/**\n* @name order\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/order}\n*/\nimport order from '@stdlib/ndarray-base-order';\nsetReadOnly( ns, 'order', order );\n\n/**\n* @name outputPolicyEnum2Str\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/output-policy-enum2str}\n*/\nimport outputPolicyEnum2Str from '@stdlib/ndarray-base-output-policy-enum2str';\nsetReadOnly( ns, 'outputPolicyEnum2Str', outputPolicyEnum2Str );\n\n/**\n* @name outputPolicyResolveEnum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/output-policy-resolve-enum}\n*/\nimport outputPolicyResolveEnum from '@stdlib/ndarray-base-output-policy-resolve-enum';\nsetReadOnly( ns, 'outputPolicyResolveEnum', outputPolicyResolveEnum );\n\n/**\n* @name outputPolicyResolveStr\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/output-policy-resolve-str}\n*/\nimport outputPolicyResolveStr from '@stdlib/ndarray-base-output-policy-resolve-str';\nsetReadOnly( ns, 'outputPolicyResolveStr', outputPolicyResolveStr );\n\n/**\n* @name outputPolicyStr2Enum\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/output-policy-str2enum}\n*/\nimport outputPolicyStr2Enum from '@stdlib/ndarray-base-output-policy-str2enum';\nsetReadOnly( ns, 'outputPolicyStr2Enum', outputPolicyStr2Enum );\n\n/**\n* @name prependSingletonDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/prepend-singleton-dimensions}\n*/\nimport prependSingletonDimensions from '@stdlib/ndarray-base-prepend-singleton-dimensions';\nsetReadOnly( ns, 'prependSingletonDimensions', prependSingletonDimensions );\n\n/**\n* @name removeSingletonDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/remove-singleton-dimensions}\n*/\nimport removeSingletonDimensions from '@stdlib/ndarray-base-remove-singleton-dimensions';\nsetReadOnly( ns, 'removeSingletonDimensions', removeSingletonDimensions );\n\n/**\n* @name reverse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/reverse}\n*/\nimport reverse from '@stdlib/ndarray-base-reverse';\nsetReadOnly( ns, 'reverse', reverse );\n\n/**\n* @name reverseDimension\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/reverse-dimension}\n*/\nimport reverseDimension from '@stdlib/ndarray-base-reverse-dimension';\nsetReadOnly( ns, 'reverseDimension', reverseDimension );\n\n/**\n* @name serializeMetaData\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/serialize-meta-data}\n*/\nimport serializeMetaData from '@stdlib/ndarray-base-serialize-meta-data';\nsetReadOnly( ns, 'serializeMetaData', serializeMetaData );\n\n/**\n* @name shape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/shape}\n*/\nimport shape from '@stdlib/ndarray-base-shape';\nsetReadOnly( ns, 'shape', shape );\n\n/**\n* @name shape2strides\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/shape2strides}\n*/\nimport shape2strides from '@stdlib/ndarray-base-shape2strides';\nsetReadOnly( ns, 'shape2strides', shape2strides );\n\n/**\n* @name singletonDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/singleton-dimensions}\n*/\nimport singletonDimensions from '@stdlib/ndarray-base-singleton-dimensions';\nsetReadOnly( ns, 'singletonDimensions', singletonDimensions );\n\n/**\n* @name slice\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice}\n*/\nimport slice from '@stdlib/ndarray-base-slice';\nsetReadOnly( ns, 'slice', slice );\n\n/**\n* @name sliceAssign\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice-assign}\n*/\nimport sliceAssign from '@stdlib/ndarray-base-slice-assign';\nsetReadOnly( ns, 'sliceAssign', sliceAssign );\n\n/**\n* @name sliceDimension\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice-dimension}\n*/\nimport sliceDimension from '@stdlib/ndarray-base-slice-dimension';\nsetReadOnly( ns, 'sliceDimension', sliceDimension );\n\n/**\n* @name sliceDimensionFrom\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice-dimension-from}\n*/\nimport sliceDimensionFrom from '@stdlib/ndarray-base-slice-dimension-from';\nsetReadOnly( ns, 'sliceDimensionFrom', sliceDimensionFrom );\n\n/**\n* @name sliceDimensionTo\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice-dimension-to}\n*/\nimport sliceDimensionTo from '@stdlib/ndarray-base-slice-dimension-to';\nsetReadOnly( ns, 'sliceDimensionTo', sliceDimensionTo );\n\n/**\n* @name sliceFrom\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice-from}\n*/\nimport sliceFrom from '@stdlib/ndarray-base-slice-from';\nsetReadOnly( ns, 'sliceFrom', sliceFrom );\n\n/**\n* @name sliceTo\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/slice-to}\n*/\nimport sliceTo from '@stdlib/ndarray-base-slice-to';\nsetReadOnly( ns, 'sliceTo', sliceTo );\n\n/**\n* @name spreadDimensions\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/spread-dimensions}\n*/\nimport spreadDimensions from '@stdlib/ndarray-base-spread-dimensions';\nsetReadOnly( ns, 'spreadDimensions', spreadDimensions );\n\n/**\n* @name stride\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/stride}\n*/\nimport stride from '@stdlib/ndarray-base-stride';\nsetReadOnly( ns, 'stride', stride );\n\n/**\n* @name strides\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/strides}\n*/\nimport strides from '@stdlib/ndarray-base-strides';\nsetReadOnly( ns, 'strides', strides );\n\n/**\n* @name strides2offset\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/strides2offset}\n*/\nimport strides2offset from '@stdlib/ndarray-base-strides2offset';\nsetReadOnly( ns, 'strides2offset', strides2offset );\n\n/**\n* @name strides2order\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/strides2order}\n*/\nimport strides2order from '@stdlib/ndarray-base-strides2order';\nsetReadOnly( ns, 'strides2order', strides2order );\n\n/**\n* @name sub2ind\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/sub2ind}\n*/\nimport sub2ind from '@stdlib/ndarray-base-sub2ind';\nsetReadOnly( ns, 'sub2ind', sub2ind );\n\n/**\n* @name ndarray2array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/to-array}\n*/\nimport ndarray2array from '@stdlib/ndarray-base-to-array';\nsetReadOnly( ns, 'ndarray2array', ndarray2array );\n\n/**\n* @name toNormalizedIndices\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/to-normalized-indices}\n*/\nimport toNormalizedIndices from '@stdlib/ndarray-base-to-normalized-indices';\nsetReadOnly( ns, 'toNormalizedIndices', toNormalizedIndices );\n\n/**\n* @name toReversed\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/to-reversed}\n*/\nimport toReversed from '@stdlib/ndarray-base-to-reversed';\nsetReadOnly( ns, 'toReversed', toReversed );\n\n/**\n* @name toUniqueNormalizedIndices\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/to-unique-normalized-indices}\n*/\nimport toUniqueNormalizedIndices from '@stdlib/ndarray-base-to-unique-normalized-indices';\nsetReadOnly( ns, 'toUniqueNormalizedIndices', toUniqueNormalizedIndices );\n\n/**\n* @name transpose\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/transpose}\n*/\nimport transpose from '@stdlib/ndarray-base-transpose';\nsetReadOnly( ns, 'transpose', transpose );\n\n/**\n* @name unary\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary}\n*/\nimport unary from '@stdlib/ndarray-base-unary';\nsetReadOnly( ns, 'unary', unary );\n\n/**\n* @name unaryAccumulate\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-accumulate}\n*/\nimport unaryAccumulate from '@stdlib/ndarray-base-unary-accumulate';\nsetReadOnly( ns, 'unaryAccumulate', unaryAccumulate );\n\n/**\n* @name unaryBy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-by}\n*/\nimport unaryBy from '@stdlib/ndarray-base-unary-by';\nsetReadOnly( ns, 'unaryBy', unaryBy );\n\n/**\n* @name unaryInputCastingDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-input-casting-dtype}\n*/\nimport unaryInputCastingDataType from '@stdlib/ndarray-base-unary-input-casting-dtype';\nsetReadOnly( ns, 'unaryInputCastingDataType', unaryInputCastingDataType );\n\n/**\n* @name unaryLoopOrder\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-loop-interchange-order}\n*/\nimport unaryLoopOrder from '@stdlib/ndarray-base-unary-loop-interchange-order';\nsetReadOnly( ns, 'unaryLoopOrder', unaryLoopOrder );\n\n/**\n* @name unaryOutputDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-output-dtype}\n*/\nimport unaryOutputDataType from '@stdlib/ndarray-base-unary-output-dtype';\nsetReadOnly( ns, 'unaryOutputDataType', unaryOutputDataType );\n\n/**\n* @name unaryReduceSubarray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-reduce-subarray}\n*/\nimport unaryReduceSubarray from '@stdlib/ndarray-base-unary-reduce-subarray';\nsetReadOnly( ns, 'unaryReduceSubarray', unaryReduceSubarray );\n\n/**\n* @name unaryBlockSize\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/unary-tiling-block-size}\n*/\nimport unaryBlockSize from '@stdlib/ndarray-base-unary-tiling-block-size';\nsetReadOnly( ns, 'unaryBlockSize', unaryBlockSize );\n\n/**\n* @name vind2bind\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/vind2bind}\n*/\nimport vind2bind from '@stdlib/ndarray-base-vind2bind';\nsetReadOnly( ns, 'vind2bind', vind2bind );\n\n/**\n* @name wrapIndex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/wrap-index}\n*/\nimport wrapIndex from '@stdlib/ndarray-base-wrap-index';\nsetReadOnly( ns, 'wrapIndex', wrapIndex );\n\n/**\n* @name zeros\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/zeros}\n*/\nimport zeros from '@stdlib/ndarray-base-zeros';\nsetReadOnly( ns, 'zeros', zeros );\n\n/**\n* @name zerosLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/zeros-like}\n*/\nimport zerosLike from '@stdlib/ndarray-base-zeros-like';\nsetReadOnly( ns, 'zerosLike', zerosLike );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","assert","assign","binaryLoopOrder","binaryBlockSize","bind2vind","broadcastArray","broadcastArrays","broadcastScalar","broadcastShapes","buffer","bufferCtors","bufferDataType","bufferDataTypeEnum","bytesPerElement","char2dtype","clampIndex","ndarray","data","dtype","dtypeChar","dtypeDesc","dtypeEnum2Str","dtypeResolveEnum","dtypeResolveStr","dtypeStr2Enum","dtype2c","dtypes2signatures","empty","emptyLike","every","expandDimensions","fill","fillBy","flag","flags","fliplr","flipud","forEach","scalar2ndarray","scalar2ndarrayLike","includes","ind","ind2sub","iterationOrder","map","maxViewBufferIndex","maybeBroadcastArray","maybeBroadcastArrays","metaDataProps","minSignedIntegerDataType","minUnsignedIntegerDataType","minViewBufferIndex","minmaxViewBufferIndex","ndarraylike2ndarray","ndarraylike2object","ndims","nextCartesianIndex","nonsingletonDimensions","normalizeIndex","normalizeIndices","nullary","nullaryLoopOrder","nullaryBlockSize","numel","numelDimension","offset","order","outputPolicyEnum2Str","outputPolicyResolveEnum","outputPolicyResolveStr","outputPolicyStr2Enum","prependSingletonDimensions","removeSingletonDimensions","reverse","reverseDimension","serializeMetaData","shape","shape2strides","singletonDimensions","slice","sliceAssign","sliceDimension","sliceDimensionFrom","sliceDimensionTo","sliceFrom","sliceTo","spreadDimensions","stride","strides","strides2offset","strides2order","sub2ind","ndarray2array","toNormalizedIndices","toReversed","toUniqueNormalizedIndices","transpose","unary","unaryAccumulate","unaryBy","unaryInputCastingDataType","unaryLoopOrder","unaryOutputDataType","unaryReduceSubarray","unaryBlockSize","vind2bind","wrapIndex","zeros","zerosLike"],"mappings":"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"}